x-deploy: &x-deploy-default
  replicas: ${GRAFANA_LOKI_REPLICAS:-3}
  placement:
    constraints:
      - node.labels.grafana-loki == true
    preferences:
      - spread: node.labels.grafana-loki
  labels:
    io.prometheus.enable: "true"
    io.prometheus.scrape_port: "3100"
  update_config:
    parallelism: 1
    delay: 30s
    order: stop-first
    failure_action: rollback
  rollback_config:
    parallelism: 1
    delay: 30s
  restart_policy:
    condition: on-failure
    delay: 30s
    max_attempts: 3
    window: 120s

x-logging: &x-logging-default
  options:
    max-size: "12m"
    max-file: "5"
  driver: json-file

networks:
  dockerswarm_monitoring:
    name: dockerswarm_monitoring
    external: true
  grafana_loki:

volumes:
  backend:
  read:
  write:

configs:
  nginx.conf:
    file: configs/nginx.conf
  loki.yml:
    template_driver: golang
    file: configs/loki.yml

x-grafana-loki: &x-grafana-loki
  image: grafana/loki:${GRAFANA_LOKI_VERSION:-2.9.2}
  networks:
    - grafana_loki
  # ports:
  #   - ${GRAFANA_LOKI_HTTP_LISTEN_PORT:-3100}:3100 # http_listen_port
  #   - ${GRAFANA_LOKI_GRPC_LISTEN_PORT:-9096}:9096 # grpc_listen_port
  configs:
    - source: loki.yml
      target: /etc/loki/loki.yml
  healthcheck:
    test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
    interval: 10s
    timeout: 5s
    retries: 5
  extra_hosts:
    - "host.docker.internal:host-gateway"
  deploy: *x-deploy-default
  logging: *x-logging-default

services:
  ingress:
    image: nginx:stable-alpine
    networks:
      - dockerswarm_monitoring
      - grafana_loki
    ports:
      - ${GRAFANA_LOKI_HTTP_LISTEN_PORT:-3100}:3100 # http_listen_port
    configs:
      - source: nginx.conf
        target: /etc/nginx/nginx.conf
    depends_on:
      - backend
      - read
      - write

  backend:
    <<: *x-grafana-loki
    command:
      - -target=backend
      - -legacy-read-mode=false
      - -config.expand-env=true
      - -config.file=/etc/loki/loki.yml
    volumes:
      - backend:/loki

  read:
    <<: *x-grafana-loki
    command:
      - -target=read
      - -config.expand-env=true
      - -config.file=/etc/loki/loki.yml
    volumes:
      - read:/loki

  write:
    <<: *x-grafana-loki
    command:
      - -target=write
      - -config.expand-env=true
      - -config.file=/etc/loki/loki.yml
    volumes:
      - write:/loki
